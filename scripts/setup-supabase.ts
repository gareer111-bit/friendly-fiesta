import { drizzle } from "drizzle-orm/postgres-js";
import postgres from "postgres";
import { teachers, students, dailyRecords, quranErrors } from "../shared/schema";
import { randomUUID } from "crypto";

// ุงูุชุญูู ูู ูุฌูุฏ ุฑุงุจุท ูุงุนุฏุฉ ุงูุจูุงูุงุช
if (!process.env.DATABASE_URL) {
  console.error("โ ุฎุทุฃ: ูู ูุชู ุงูุนุซูุฑ ุนูู DATABASE_URL");
  console.log("๐ ูุฑุฌู ุฅุถุงูุฉ ุฑุงุจุท ูุงุนุฏุฉ ุงูุจูุงูุงุช ูู Supabase ูู Secrets");
  console.log("๐ ุงุชุจุน ุงูุชุนูููุงุช ูู ููู SUPABASE_SETUP.md");
  process.exit(1);
}

const connectionString = process.env.DATABASE_URL;
const client = postgres(connectionString);
const db = drizzle(client);

const teachersData = [
  // ุญููุงุช ุงูุฑุฌุงู
  { name: "ุฃ. ุนุจุฏุงูุฑุฒุงู", username: "abdalrazaq", password: "Quran2024@", gender: "male" as const, circleName: "ุญููุฉ ุนุจุฏุงูุฑุฒุงู" },
  { name: "ุฃ. ุฅุจุฑุงููู ูุฏูุงุฆู", username: "ibrahim", password: "Ibrahim123#", gender: "male" as const, circleName: "ุญููุฉ ุฅุจุฑุงููู ูุฏูุงุฆู" },
  { name: "ุฃ. ุญุณู", username: "hassan", password: "Hassan456$", gender: "male" as const, circleName: "ุญููุฉ ุญุณู" },
  { name: "ุฃ. ุณุนูุฏ", username: "saud", password: "Saud789%", gender: "male" as const, circleName: "ุญููุฉ ุณุนูุฏ" },
  { name: "ุฃ. ุตุงูุญ", username: "saleh", password: "Saleh012^", gender: "male" as const, circleName: "ุญููุฉ ุตุงูุญ" },
  { name: "ุฃ. ุนุจุฏุงููู", username: "abdullah", password: "Abdullah345&", gender: "male" as const, circleName: "ุญููุฉ ุนุจุฏุงููู" },
  { name: "ุฃ. ูุจูู", username: "nabil", password: "Nabil678*", gender: "male" as const, circleName: "ุญููุฉ ูุจูู" },
  
  // ุญููุงุช ุงููุณุงุก
  { name: "ุฃ. ุฃุณูุงุก", username: "asma", password: "Asma2024@", gender: "female" as const, circleName: "ุญููุฉ ุฃุณูุงุก" },
  { name: "ุฃ. ุฑุบุฏ", username: "raghad", password: "Raghad123#", gender: "female" as const, circleName: "ุญููุฉ ุฑุบุฏ" },
  { name: "ุฃ. ูุฏููุฉ", username: "madina", password: "Madina456$", gender: "female" as const, circleName: "ุญููุฉ ูุฏููุฉ" },
  { name: "ุฃ. ูุดูุฉ", username: "nashwa", password: "Nashwa789%", gender: "female" as const, circleName: "ุญููุฉ ูุดูุฉ" },
  { name: "ุฃ. ููุฑ", username: "nour", password: "Nour012^", gender: "female" as const, circleName: "ุญููุฉ ููุฑ" },
  { name: "ุฃ. ููุฏ", username: "hind", password: "Hind345&", gender: "female" as const, circleName: "ุญููุฉ ููุฏ" },
];

async function setupSupabase() {
  try {
    console.log("๐ ุจุฏุก ุฅุนุฏุงุฏ ูุงุนุฏุฉ ุจูุงูุงุช Supabase...");
    console.log("๐ ุงูุงุชุตุงู ุจู:", connectionString.replace(/:[^:@]*@/, ":****@"));
    
    // ุงูุชุญูู ูู ุงูุงุชุตุงู
    console.log("๐ ุงุฎุชุจุงุฑ ุงูุงุชุตุงู...");
    await client`SELECT 1`;
    console.log("โ ุชู ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช ุจูุฌุงุญ!");
    
    // ุงูุชุญูู ูู ูุฌูุฏ ุงูุจูุงูุงุช ูุณุจูุงู
    console.log("๐ ูุญุต ุงูุจูุงูุงุช ุงูููุฌูุฏุฉ...");
    const existingTeachers = await db.select().from(teachers);
    
    if (existingTeachers.length > 0) {
      console.log(`๐ ุชู ุงูุนุซูุฑ ุนูู ${existingTeachers.length} ูุนูู ููุฌูุฏ ูุณุจูุงู`);
      console.log("โจ ูุงุนุฏุฉ ุงูุจูุงูุงุช ุฌุงูุฒุฉ ููุงุณุชุฎุฏุงู!");
      return;
    }
    
    // ุฅุฏุฎุงู ุจูุงูุงุช ุงููุนูููู
    console.log("๐ฅ ุฅุฏุฎุงู ุจูุงูุงุช ุงููุนูููู...");
    
    for (const teacher of teachersData) {
      await db.insert(teachers).values({
        id: randomUUID(),
        ...teacher
      });
      console.log(`โ ุชู ุฅุถุงูุฉ: ${teacher.name}`);
    }
    
    // ุนุฑุถ ุงููุชุงุฆุฌ ุงูููุงุฆูุฉ
    const finalResult = await db.select().from(teachers);
    const maleTeachers = finalResult.filter(t => t.gender === 'male').length;
    const femaleTeachers = finalResult.filter(t => t.gender === 'female').length;
    
    console.log("\n๐ ุชู ุฅุนุฏุงุฏ ูุงุนุฏุฉ ุงูุจูุงูุงุช ุจูุฌุงุญ!");
    console.log(`๐ ุฅุฌูุงูู ุงููุนูููู: ${finalResult.length}`);
    console.log(`๐จโ๐ซ ูุนูููู ุงูุฑุฌุงู: ${maleTeachers}`);
    console.log(`๐ฉโ๐ซ ูุนููุงุช ุงููุณุงุก: ${femaleTeachers}`);
    console.log("\n๐ ุงููุธุงู ุฌุงูุฒ ููุงุณุชุฎุฏุงู ูุน Supabase!");
    
  } catch (error) {
    console.error("โ ุฎุทุฃ ูู ุฅุนุฏุงุฏ ูุงุนุฏุฉ ุงูุจูุงูุงุช:");
    console.error(error);
    console.log("\n๐ ุชุฃูุฏ ูู:");
    console.log("1. ุตุญุฉ ุฑุงุจุท DATABASE_URL");
    console.log("2. ุฃู ูุงุนุฏุฉ ุงูุจูุงูุงุช Supabase ูุชุงุญุฉ");
    console.log("3. ุฃู ูููุฉ ุงููุฑูุฑ ุตุญูุญุฉ ูู ุงูุฑุงุจุท");
  } finally {
    await client.end();
  }
}

// ุชุดุบูู ุงูุฅุนุฏุงุฏ
setupSupabase();